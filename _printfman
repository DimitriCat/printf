.TH _PRINTF 3 "22 October 2017" "0.64" "_printf man page"
.SH NAME
_printf - print arguments onto standard output and use format specifiers to convert arguments into strings.
.SH SYNOPSIS
#include "holberton.h"

int _printf(const char *format, ...);

.SH DESCRIPTION
Functions in the _printf() family produce output into the command line, while converting all
.I format
specifiers into strings. The function _printf() writes output to
.IR "stdout" ,
the standard output stream.
.SH Return Value
Upon successful return, these functions return the number of characters printed(excluding the NULL byte at the end of the string).
.SH Format of the format string
The format string is a string of characters. The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged into the standard output; and conversion specifications, each of which results in fetching subsequent arguments. Each conversion specification is preceded by the character '%', and ends with a format specifier.
.SS Format Specifier
A character that signifies the type of conversion to be applied. the format specifiers and their meanings are:
.TP
.BR d ", " i
The
.I int
argument is converted to signed decimal notation.
.TP
.B c
The
.IR "int"
argument is converted to an
.IR "unsigned char" ,
and the resulting character is written.
.TP
.B "s, S"
The
.I char *
argument is expected to be a pointer to an array of a character type (pointer to a string). Characters from the array are written up to (but not including) a terminating null byte ('\\0').  The (S)  is the same as (s) but it prints the unprintable characters as hex codes. (\\x0A)
.TP
.BR o ", " u ", " b ", " x ", " X
The
.IR "unsigned int"
argument is converted to unsigned octal (o), unsigned decimal (u), unsigned binary (b), or unsigned hexadecimal (x and X) notation.  The letters abcdef are used for x conversions; the letters ABCDEF are used for X conversions.
.TP
.B r
The
.IR "char *"
argument is printed in reverse.
.TP
.B R
The
.IR "char *"
argument is encoded into Rot13.
.TP
.B p
The
.IR "void *"
pointer argument is printed in hexadecimal.
.TP
.B %
A '%' is written. No argument is converted. The complete conversion specification is '%%'.
.SH BUGS
We don't have bugs bro.
.SH AUTHORS
Dimitrios Philliou & Thomas Dumont
